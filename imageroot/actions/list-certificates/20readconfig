#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import os
import agent
import sys
import urllib.request

from custom_certificate_manager import list_custom_certificates
from get_certificate import get_certificate


api_path = os.environ["API_PATH"]

data = json.load(sys.stdin)

# Get the list of routers keys
try:
    with urllib.request.urlopen(f'http://127.0.0.1/{api_path}/api/http/routers') as res:
        traefik_routes = json.load(res)
except urllib.error.URLError as e:
    raise Exception(f'Error reaching traefik daemon: {e.reason}') from e
certificates= []

# list routes and retrieve either main for a simple list 
# or name to use it inside the traefik API and list following type and valid acme cert
for route in traefik_routes:
     if "certResolver" in route.get("tls", {}) and route['status'] == 'enabled':
         domains = route["tls"]["domains"]
         if data != None and data.get('expand_list'):
             # we do not use fqdn, we use name : certificate-sub.domain.com@file or nextcloud1-https@file
             certificates.append(get_certificate({'name': route['name']}))
         else:
             certificates.append(domains[0]["main"])

# Retrieve custom certificate
if data != None and data.get('expand_list'):
    certificates = certificates + list_custom_certificates()
else:
    certificates_custom = []
    for item in list_custom_certificates():
        certificates_custom.append(item["fqdn"])
    certificates = certificates + certificates_custom

json.dump(certificates, fp=sys.stdout)
