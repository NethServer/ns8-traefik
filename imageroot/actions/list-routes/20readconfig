#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import os
import agent
import sys
import urllib.request
from get_route import get_route


api_path = os.environ["API_PATH"]

data = json.load(sys.stdin)

# Get the list of routers keys with pagination support
traefik_routes = []
page = 1
try:
    while True:
        with urllib.request.urlopen(f'http://127.0.0.1/{api_path}/api/http/routers?page={page}&per_page=100') as res:
            page_routes = json.load(res)
            traefik_routes.extend(page_routes)

            # Check if there are more pages
            if 'X-Next-Page' not in res.headers:
                break
            page += 1
except urllib.error.URLError as e:
    raise Exception(f'Error reaching traefik daemon: {e.reason}')

# Gernerate the list of routes
routes = [ route['name'].removesuffix('-https@file') for route in traefik_routes if route['name'].endswith('-https@file') ]

if data != None and data.get('expand_list'):
    routes = [ get_route({'instance': route}) for route in routes ]

json.dump(routes, fp=sys.stdout)
