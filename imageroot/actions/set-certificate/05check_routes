#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import os
import agent
import subprocess

agent.set_weight(os.path.basename(__file__), 0) # Validation step, no task progress at all



def main():
    request = json.load(sys.stdin)
    if request.get('check_routes', False) and is_fqdn_used_by_route(request['fqdn']):
        agent.set_status('validation-failed')
        json.dump([{'field':'fqdn','parameter':'fqdn','value': request['fqdn'],'error':'fqdn_conflicts_with_route'}], fp=sys.stdout)
        sys.exit(2)

def is_fqdn_used_by_route(fqdn):
    proc = subprocess.run(["../actions/list-routes/20readconfig"], input=json.dumps({"expand_list": True}), text=True, stdout=subprocess.PIPE)
    for route in json.loads(proc.stdout):
        if not route.get('lets_encrypt'):
            continue
        if fqdn == route.get('host'):
            print(f"[ERROR] Validation failed: fqdn {fqdn} conflicts with HTTP route {route['instance']}", file=sys.stderr)
            return True
    return False

if __name__ == "__main__":
    main()
