#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import os
import cert_helpers
import agent
import datetime

def main():
    request = json.load(sys.stdin)
    obtained, acme_error = cert_helpers.request_new_default_certificate(new_cert_names=[request['fqdn']], merge_names=True, sync_timeout=request.get('sync_timeout', 60))
    if obtained:
        json.dump({"obtained": True}, fp=sys.stdout)
    else:
        for errline in acme_error.split('\n'):
            print(agent.SD_ERR + errline, file=sys.stderr)
        # NOTE: this action does not return the usual validation-failed format
        json.dump({"obtained": False}, fp=sys.stdout)
        exit(2)

if __name__ == "__main__":
    main()
