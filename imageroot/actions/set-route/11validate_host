#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import os
import agent
import cert_helpers

agent.set_weight(os.path.basename(__file__), 0) # Validation step, no task progress at all

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

if "host" in data and not data.get('path'):
    if data["host"] == '127.0.0.1' or data["host"] == 'localhost':
        agent.set_status('validation-failed')
        json.dump([{'field':'host','parameter':'host','value': data["host"],'error':'host_is_not_valid_not_localhost'}], fp=sys.stdout)
        sys.exit(2)

if "host" in data and data.get("lets_encrypt") and data.get("lets_encrypt_check"):
    obtained, acme_error = cert_helpers.request_new_certificate([data["host"]])
    if not obtained:
        for errline in acme_error.split('\n'):
            print(agent.SD_ERR + errline, file=sys.stderr)
        agent.set_status('validation-failed')
        json.dump([{'field':'host', 'parameter':'names', 'value':data["host"], 'error':'newcert_acme_error', 'details':acme_error}], fp=sys.stdout)
        exit(3)
