#!/usr/bin/env sh

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

set -e

CERT_FILE=uploaded_cert
KEY_FILE=uploaded_key
VALID_KEY=0
TYPE_KEY=""

del_certs() {
    rm -f $KEY_FILE $CERT_FILE
}

# checking if key is valid
if openssl rsa -check -in $KEY_FILE >/dev/null 2>&1; then
    VALID_KEY=1
    TYPE_KEY="rsa"
elif openssl dsa -check -in $KEY_FILE >/dev/null 2>&1; then
    VALID_KEY=1
    TYPE_KEY="dsa"
elif openssl ec -check -in $KEY_FILE >/dev/null 2>&1; then
    VALID_KEY=1
    TYPE_KEY="ec"
fi

if [ $VALID_KEY -eq 0 ]; then
    echo "Key validation failed." 1>&2
    echo "set-status validation-failed" >&${AGENT_COMFD:-2}
    printf '{"field":"keyFile","parameter":"keyFile","value":"","error":"invalid_key"}\n'
    del_certs
    exit 2
fi

# check if certificate is properly pam formatted
if ! openssl x509 -text -noout -in $CERT_FILE >/dev/null 2>&1; then
    echo "Certificate not well formatted." 1>&2
    echo "set-status validation-failed" >&${AGENT_COMFD:-2}
    printf '{"field":"certFile","parameter":"certFile","value":"","error":"invalid_format"}\n'
    del_certs
    exit 4
fi

# check it the common name is present and is not empty
cn_name=$(openssl x509 -noout -subject -nameopt=multiline -in $CERT_FILE | sed -n 's/ *commonName *= //p')
if [ -z "$cn_name" ]; then
    echo "Certificate doesn't have a common name." 1>&2
    echo "set-status validation-failed" >&${AGENT_COMFD:-2}
    printf '{"field":"certFile","parameter":"certFile","value":"","error":"empty_common_name"}\n'
    del_certs
    exit 5
fi

# check if cert is provided by key (we compare md5 of public keys)
cert_public_key="$(openssl x509 -noout -pubkey -in  $CERT_FILE | openssl md5)"
key_public_key="$(openssl  pkey -pubout -in $KEY_FILE | openssl md5)"

if [ "$cert_public_key" != "$key_public_key" ]; then
    echo "Key didn't generate certificate." 1>&2
    echo "set-status validation-failed" >&${AGENT_COMFD:-2}
    printf '{"field":"certFile","parameter":"certFile","value":"","error":"key_mismatch"}\n'
    del_certs
    exit 3
fi

# check for wildcard common name
if echo "$cn_name" | grep -q '^\*'; then
    wildcard_cn_name=$(echo "$cn_name" | sed 's/^\*\.//')
    cn_name="wildcard_$wildcard_cn_name"
fi
